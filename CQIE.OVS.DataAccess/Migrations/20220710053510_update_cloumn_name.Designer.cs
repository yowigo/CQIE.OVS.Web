// <auto-generated />
using System;
using CQIE.OVS.DataAccess.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CQIE.OVS.DataAccess.Migrations
{
    [DbContext(typeof(OVSDbContext))]
    [Migration("20220710053510_update_cloumn_name")]
    partial class update_cloumn_name
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CQIE.OVS.Models.IdentityModel.SysRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("OVS_SysRole");
                });

            modelBuilder.Entity("CQIE.OVS.Models.IdentityModel.SysRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("OVS_SysRoleClaim");
                });

            modelBuilder.Entity("CQIE.OVS.Models.IdentityModel.SysUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LoginPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("OVS_SysUser");
                });

            modelBuilder.Entity("CQIE.OVS.Models.IdentityModel.SysUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OVS_SysUserClaim");
                });

            modelBuilder.Entity("CQIE.OVS.Models.IdentityModel.SysUserLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OVS_SysUserLogin");
                });

            modelBuilder.Entity("CQIE.OVS.Models.IdentityModel.SysUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("OVS_SysUserRole");
                });

            modelBuilder.Entity("CQIE.OVS.Models.IdentityModel.SysUserToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("OVS_SysUserToken");
                });

            modelBuilder.Entity("CQIE.OVS.Models.Singer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Motto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("National")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profile")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("VoteNum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OVS_Singer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 39,
                            Gender = 1,
                            Motto = "不跟别人比,就跟自己比",
                            Name = "张杰",
                            National = "中国",
                            Phone = "1xxxxxxxx88",
                            PhotoPath = "/images/background.jpg",
                            Profile = "张杰，1982年12月20日出生于四川省成都市，是一位中国内地男歌手。2004年，他参加第一届“我型我秀”冠军出道：凭借成名曲《北斗星的爱》获得全球华语榜中榜”年度传媒推荐大奖”等奖项；凭借专辑《明天过后》获得最受欢迎男歌手奖，获得北京流行音乐典礼11项提名；凭借发行的MX - POP专辑《未·LVE》销量打破FP三白金认证。张杰的其他代表作品有《天下》、《勿忘心安》、《一路之下》、《这，就是爱》、《最美的太阳》、《他不懂》等。",
                            VoteNum = 0
                        },
                        new
                        {
                            Id = 2,
                            Age = 41,
                            Gender = 1,
                            Motto = "认真对待每一个人，你们都是林俊杰的人",
                            Name = "林俊杰",
                            National = "中国",
                            Phone = "1xxxxxxx666",
                            PhotoPath = "",
                            Profile = "林俊杰（JJ Lin），著名男歌手，1981年出生于新加坡。2003年首发第一张个人创作专辑《乐行者》，取得不俗成绩；其杰出的创作才能又在之后推出的《江南》、《曹操》、《JJ陆》等多部畅销唱片专辑中得以充分展现；于此同时，林俊杰还斩获了无数音乐大奖，成为当今华语歌坛最耀眼的男歌手之一。",
                            VoteNum = 0
                        });
                });

            modelBuilder.Entity("CQIE.OVS.Models.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Categroy")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OVS_Theme");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categroy = "音乐节",
                            Description = "今年是第二十届，与以往不同的是，中国爱乐乐团将携手上海交响乐团、广州交响乐团两支兄弟乐团，由余隆指挥，共同演出一场以红色经典为主线的新年音乐会，迎接2021年中国共产党成立一百周年华诞。据了解，2019年10月1日，中国爱乐乐团也曾携手上海交响乐团、广州交响乐团等十六支交响乐团共同组建成规模庞大的“千人交响乐团”，共同奏响献礼中华人民共和国成立七十周年的华章。",
                            EndTime = new DateTime(2022, 7, 10, 13, 35, 10, 90, DateTimeKind.Local).AddTicks(4131),
                            Name = "2021CCTV新年音乐会",
                            StartTime = new DateTime(2022, 7, 10, 13, 35, 10, 89, DateTimeKind.Local).AddTicks(7489)
                        },
                        new
                        {
                            Id = 2,
                            Categroy = "音乐节",
                            Description = "本场音乐会以交响音乐会的形式，回顾2021年，展望2022年，在新年起始之际，中央广播电台文艺中心音乐频道与中国爱乐乐团携手为广大音乐爱好者带来一场新年音乐会。",
                            EndTime = new DateTime(2022, 7, 10, 13, 35, 10, 90, DateTimeKind.Local).AddTicks(4486),
                            Name = "2022CCTV新年音乐会",
                            StartTime = new DateTime(2022, 7, 10, 13, 35, 10, 90, DateTimeKind.Local).AddTicks(4475)
                        });
                });

            modelBuilder.Entity("CQIE.OVS.Models.Theme_Singer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SingerId")
                        .HasColumnType("int");

                    b.Property<int>("ThemeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SingerId");

                    b.HasIndex("ThemeId");

                    b.ToTable("Theme_Singers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SingerId = 1,
                            ThemeId = 1
                        },
                        new
                        {
                            Id = 2,
                            SingerId = 2,
                            ThemeId = 1
                        },
                        new
                        {
                            Id = 3,
                            SingerId = 1,
                            ThemeId = 2
                        });
                });

            modelBuilder.Entity("CQIE.OVS.Models.Theme_User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ThemeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ThemeId");

                    b.HasIndex("UserId");

                    b.ToTable("OVS_Theme_User");
                });

            modelBuilder.Entity("CQIE.OVS.Models.IdentityModel.SysRoleClaim", b =>
                {
                    b.HasOne("CQIE.OVS.Models.IdentityModel.SysRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CQIE.OVS.Models.IdentityModel.SysUserClaim", b =>
                {
                    b.HasOne("CQIE.OVS.Models.IdentityModel.SysUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CQIE.OVS.Models.IdentityModel.SysUserLogin", b =>
                {
                    b.HasOne("CQIE.OVS.Models.IdentityModel.SysUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CQIE.OVS.Models.IdentityModel.SysUserRole", b =>
                {
                    b.HasOne("CQIE.OVS.Models.IdentityModel.SysRole", "Role")
                        .WithMany("SysUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CQIE.OVS.Models.IdentityModel.SysUser", "User")
                        .WithMany("SysUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CQIE.OVS.Models.IdentityModel.SysUserToken", b =>
                {
                    b.HasOne("CQIE.OVS.Models.IdentityModel.SysUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CQIE.OVS.Models.Theme_Singer", b =>
                {
                    b.HasOne("CQIE.OVS.Models.Singer", "Singer")
                        .WithMany("Theme_Singers")
                        .HasForeignKey("SingerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CQIE.OVS.Models.Theme", "Theme")
                        .WithMany("Theme_Singers")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CQIE.OVS.Models.Theme_User", b =>
                {
                    b.HasOne("CQIE.OVS.Models.Theme", "Theme")
                        .WithMany("Theme_Users")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CQIE.OVS.Models.IdentityModel.SysUser", "User")
                        .WithMany("Theme_Users")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
